1) Are BRs helpful in software maintenance?

R: 错误报告对软件维护很有意义。软件出现bug的话，我们需要一个详细的bug描述，这样有助于我们更加清楚的了解bug以及后续的维护，而缺陷报告很好地满足了我们的需求。
R: Bug reports are meaningful for software maintenance. If there is a bug in the software, we need a detailed bug description, which helps us clearly understand the bug and perform subsequent maintenance. The bug report matches our needs well.

2) Can automated BR related software tasks (e.g., bug priority prediction) improve the efficiency of software maintenance?

R: 这是肯定的。通过AI技术对缺陷报告进行分析之后，可以执行一系列自动化的工作，例如优先级分配，严重度分配以及开发者推荐等，这样有助于提高软件维护效率。实际维护过程中bug triager要人工分析缺陷报告并做出决策。此外我们公司一般产品经理也会分析缺陷报告，为了更好地了解用户需求，以更好地迭代软件产品。因此，针对缺陷报告相关任务的自动化工具有助于提交软件维护效率。
R: Sure. After analyzing bug reports through AI technology, a series of automated tasks can be performed, such as priority assignment, severity assignment, and developer recommendation. In the actual software maintenance, the bug triager needs to manually analyze the bug report and make decisions. In addition, our company's product managers will also analyze bug reports, in order to better understand user needs and better iterate software products. So, automated tools aimed at bug report related tasks can improve the efficiency of software maintenance.

3) If BureBERT based system can simultaneously implement the four BR related tasks including priority & severity predictions, BR summarization, and duplicate BR detection, do you think it is more meaningful than the previous tool aimed at a single task?

R: 这是肯定的。因为这样一个系统意味了可以将软件维护的一个小环节自动化，这相比于单个自动化的任务更加有意义。因为就算有工具能够自动化分配缺陷的优先级，开发人员依然需要人工阅读缺陷报告进行严重度的分配或者确认这个bug是否重复。而这样一个系统意味软件维护可以直接从开发者分配这一环节开始，这大大提高了软件维护的效率并且帮助公司节省了人力开销。
R: Definitely. Such a system means that a small part of software maintenance can be automated, which makes more sense than a single automated task. Even if there are tools that can automatically assign bug priorities, developers still need to manually read bug reports to assign severity or confirm whether the bug is a duplicate. This system means that software maintenance can start directly from the process of developer allocation, which greatly improves the efficiency of software maintenance and helps companies save labor costs.

4) What are your requirements for such a system?

R: 首先肯定是对准确度有要求，希望该系统中的每一个任务都能有一个较高的准确度。其次就是时效性了，因为如果开发者无法及时得到反馈就需要一直处于等待状态，这浪费了人力成本。如果改系统能够快速针对新产生的缺陷报告进行相应的作业，这样可以极大提高团队的软件维护效率以及开发效率。
R: First of all, there must be a requirement for accuracy, and I hoped that each task in the system can have high accuracy. The second is timeliness because if developers can't get feedback in time, they need to keep waiting, which wastes labor costs. If the system can quickly perform the corresponding processing for newly generated bug reports, it can greatly improve the software maintenance efficiency and development efficiency of the team.

5) Do you have more expectations for this system?

R: 我希望能够对严重度做一个更为细致的划分。因为一个版本迭代的过程中会有很多bug产生，有些bug可能会严重影响版本的迭代，而有些bug其实并不严重。因此我希望能够对严重度做更为细致的划分，能够向开发者推荐哪些bug必需要修复而哪些bug则可以做一定的忽略。其次我还希望该系统能够对优先级较低且长期未被修复的bug重新划分一个较高的优先级，从而让它们得到修复。
R: I would like to be able to make a more detailed division of severity. There will be many bugs in the process of a version iteration, and some bugs may seriously affect the version iteration, while some bugs are not serious. Therefore, I hope to be able to make a more detailed division of the severity, and especially can recommend to developers which bugs must be fixed and which bugs can be ignored. Second, I would also like the system to give a relatively high priority to the lower-priority bug that has not been fixed for a long time, so that they can be fixed.
